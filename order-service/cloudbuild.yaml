steps:
  # Step 1: Build Docker image for Order Service
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'build'
      - '-t'
      - 'us-central1-docker.pkg.dev/$PROJECT_ID/lugx-docker-repo/order-service:$SHORT_SHA'
      - '-f'
      - 'order-service/Dockerfile'
      - 'order-service'

  # Step 2: Push Docker image to Artifact Registry
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'push'
      - 'us-central1-docker.pkg.dev/$PROJECT_ID/lugx-docker-repo/order-service:$SHORT_SHA'

  # Step 3: Authenticate to GKE using REGION
  - name: 'gcr.io/cloud-builders/gcloud'
    args:
      - 'container'
      - 'clusters'
      - 'get-credentials'
      - 'lugx-cluster'
      - '--region'
      - 'us-central1'
      - '--project'
      - '$PROJECT_ID'

  # Step 4: Replace IMAGE_PLACEHOLDER and deploy Order Service Deployment
  - name: 'gcr.io/cloud-builders/gcloud'
    entrypoint: bash
    args:
      - -c
      - |
        IMAGE_URI="us-central1-docker.pkg.dev/$PROJECT_ID/lugx-docker-repo/order-service:$SHORT_SHA"
        sed "s|IMAGE_PLACEHOLDER|$IMAGE_URI|" order-service/order-service-deployment.yaml | kubectl apply -f -

  # Step 5: Apply Order Service Kubernetes Service (LoadBalancer)
  - name: 'gcr.io/cloud-builders/kubectl'
    args: ['apply', '-f', 'order-service/order-service-service.yaml']
    env:
      - CLOUDSDK_COMPUTE_REGION=us-central1
      - CLOUDSDK_CONTAINER_CLUSTER=lugx-cluster

  # Step 6: Apply database secret for Order Service
  - name: 'gcr.io/cloud-builders/kubectl'
    args: ['apply', '-f', 'order-service/order-db-secret.yaml']
    env:
      - CLOUDSDK_COMPUTE_REGION=us-central1
      - CLOUDSDK_CONTAINER_CLUSTER=lugx-cluster

images:
  - 'us-central1-docker.pkg.dev/$PROJECT_ID/lugx-docker-repo/order-service:$SHORT_SHA'

options:
  logging: CLOUD_LOGGING_ONLY