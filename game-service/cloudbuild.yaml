steps:
  # Step 1: Build Docker image from game-service directory
  - name: 'gcr.io/cloud-builders/docker'
    dir: game-service
    args:
      - 'build'
      - '-t'
      - 'us-central1-docker.pkg.dev/$PROJECT_ID/lugx-docker-repo/game-service:$SHORT_SHA'
      - '.'

  # Step 2: Push Docker image
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'push'
      - 'us-central1-docker.pkg.dev/$PROJECT_ID/lugx-docker-repo/game-service:$SHORT_SHA'

  # Step 3: Replace image placeholder with actual Artifact Registry image
  - name: 'gcr.io/cloud-builders/gcloud'
    entrypoint: bash
    args:
      - -c
      - |
        sed "s|IMAGE_PLACEHOLDER|us-central1-docker.pkg.dev/$PROJECT_ID/lugx-docker-repo/game-service:$SHORT_SHA|g" game-service/game-service-deployment.yaml > k8s-deployment.yaml

  # Step 4: Deploy to GKE
  - name: 'gcr.io/cloud-builders/kubectl'
    args: ['apply', '-f', 'k8s-deployment.yaml']
    env:
      - CLOUDSDK_COMPUTE_ZONE=us-central1
      - CLOUDSDK_CONTAINER_CLUSTER=lugx-cluster

  # Optional: Apply the service file
  - name: 'gcr.io/cloud-builders/kubectl'
    args: ['apply', '-f', 'game-service/game-service-service.yaml']
    env:
      - CLOUDSDK_COMPUTE_ZONE=us-central1
      - CLOUDSDK_CONTAINER_CLUSTER=lugx-cluster

images:
  - us-central1-docker.pkg.dev/$PROJECT_ID/lugx-docker-repo/game-service:$SHORT_SHA

serviceAccount: cloudbuild-deployer@lugx-gaming-project.iam.gserviceaccount.com

options:
  logging: CLOUD_LOGGING_ONLY
  #Test